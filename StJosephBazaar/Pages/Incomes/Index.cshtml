@page
@model StJosephBazaar.Pages.Incomes.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Income</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Booth:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a ID="return" asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Income[0].Booth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Income[0].RecieptNum)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Income[0].Date)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Income[0].HourCollected)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TotalSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Income[0].Total)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Income) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Booth.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RecieptNum)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HourCollected)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                <a ID="return" asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a ID="return" asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a ID="return" asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Income.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Income.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Income.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Income.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
